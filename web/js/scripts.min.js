$(".delete").on("click", function () {
    var el = $(this).closest(".notification");
    cuteHide(el)
});

function cuteHide(el) {
    el.animate({opacity: "0"}, 150, function () {
        el.animate({height: "0px"}, 150, function () {
            el.remove()
        })
    })
}

$(".checkbox").change(function () {
    if (this.checked) {
        $(this).closest("tr").addClass("is-selected")
    } else {
        $(this).closest("tr").removeClass("is-selected")
    }
});
$(".check_all").change(function () {
    if (this.checked) {
        $("form input[type='checkbox']").prop("checked", true);
        $("form input.checkbox[type='checkbox']").closest("tr").addClass("is-selected")
    } else {
        $("form input[type='checkbox']").prop("checked", false);
        $("form input.checkbox[type='checkbox']").closest("tr").removeClass("is-selected")
    }
});
$("table tbody tr").click(function (event) {
    if (event.target.type !== "checkbox") {
        $(":checkbox", this).trigger("click")
    }
});
var getExtension = function getExtension(filename) {
    var parts = filename.split(".");
    return parts[parts.length - 1]
};
var isCsv = function isCsv(filename) {
    var ext = getExtension(filename);
    switch (ext.toLowerCase()) {
        case"csv":
        case"xls":
        case"xlsx":
        case"xlsm":
            return true
    }
    return false
};
$(function () {
    $("input:file").change(function () {
        var fileName = $(this).val();
        $("#fileName").html(fileName);
        if (fileName !== "" && isCsv(fileName)) {
            $("#csvUploadBtn").removeAttr("disabled")
        } else {
            $("#csvUploadBtn").prop("disabled")
        }
    })
});
var getUrlParameter = function getUrlParameter(sParam) {
    var sPageURL = decodeURIComponent(window.location.search.substring(1)), sURLVariables = sPageURL.split("&"), sParameterName, i;
    for (i = 0; i < sURLVariables.length; i++) {
        sParameterName = sURLVariables[i].split("=");
        if (sParameterName[0] === sParam) {
            return sParameterName[1] === undefined ? true : sParameterName[1]
        }
    }
};
$(function () {
    var lim = getUrlParameter("limit");

    if (lim) {

        if (typeof lim !== "undefined") {
            $("#limit").val(lim)
        } else {
            $("#limit").val(limit)
        }
    }
});

$("#limit").change(function () {
    var url = pathWithLimit;
    var item = $("#limit").find(":selected").text();
    window.location.href = url.replace(limit, item)
});

function confirmDelete(csv, nocheck) {
    csv = csv || false;
    nocheck = nocheck || false;
    if (csv) {
        if ($("#deleteAll").is(":checked") || nocheck) {
            return confirm(confirmDelAll)
        }
        return true
    }
    return confirm(confirmDel)
}

let dct = $('#delete-condition-text');
$('#temporary').change(function () {
    if ($(this).prop('checked') === true)
        dct.text('The account will be disabled.')
    else
        dct.removeAttr('text')
})

$('#permanently').change(function () {
    if ($(this).prop('checked') === true)
        dct.text('The account will be deleted.')
    else
        dct.removeAttr('text')
})

$("#planTextModalBtn").click(function () {
    $(".modal").addClass("is-active");
});

$(".planTextModal").click(function () {
    $(".modal").removeClass("is-active");
});

$('.select-plan').click(function () {
    $('.plane-price-content').slideToggle(400);
})


$('.check-plan-amount').click(function () {
    let $all = $('.check-plan-amount,.custom-check-plan-amount').find('i');
    $('.custom-plane-amount').empty();
    $('.custom-plane-amount').append(`<p>Custom</p>`);
    // $all.find('.amount').prop('checked',false);
    if ($all.hasClass('far fa-check-square')) {
        $all.removeClass('far fa-check-square');
        $all.addClass('far fa-square')
    }
    $(this).find('i').removeClass('far fa-square').addClass('far fa-check-square')
    $(this).find('.plan-amount').prop('checked', true);
})

$('.custom-check-plan-amount').click(function () {
    let $all = $('.check-plan-amount').find('i');
    if ($all.hasClass('far fa-check-square')) {
        $all.removeClass('far fa-check-square');
        $all.addClass('far fa-square')
    }
    $(this).find('i').removeClass('far fa-square').addClass('far fa-check-square')
    let $custom_amount = $('.custom-plane-amount');
    $custom_amount.empty();
    $custom_amount.append(`<input class="custom-amount-input" name="amount"  maxlength="7" autofocus placeholder="min 10.000" autocomplete="off">`)

})

$("#openModal").click(function () {
    $(".my_modal_2").addClass("is-active");
});

$(".modal-close").click(function () {
    $(".my_modal_2").removeClass("is-active");
});

$("#plan_text").click(function () {
    $("#plan_text_modal").addClass("is-active");
});

$(".modal-close").click(function () {
    $("#plan_text_modal").removeClass("is-active");
});


$('.show-user').click(function () {
    this.disabled = true;
    let $user_id = this.getAttribute('data-id');
    $.ajax({
        url: '/get-user-data-ajax',
        type: 'POST',
        dataType: 'json',
        data: {user: $user_id},
        success: function (response) {
            let modal = `
                             <div class="modal is-active">
                                <div class="modal-background"></div>
                                <div class="modal-content">
                                  <!-- Any other Bulma elements you want -->
                            <div class="modal-card">
                              <header class="modal-card-head">
                                <p class="modal-card-title">User Information</p>
                                <button class="delete" aria-label="close" onclick="closemodal()"></button>
                              </header>
                              <section class="modal-card-body">
                                <p>Name : <strong>${response.name}</strong></p>
                                <hr>
                                <p>Phone : <strong>${response.phone}</strong></p>
                                <hr>
                                <p>Address : <strong>${response.address}</strong></p>
                              </section>
                              <footer class="modal-card-foot">
                              </footer>
                            </div>
                                  </div>
                              </div>`;
            $('body, hmtl').append(modal);
        }
    });
})

$('.show-house').click(function () {
    this.disabled = true;
    let $hoser_id = this.getAttribute('data-id');
    $.ajax({
        url: '/get-house-data-ajax',
        type: 'POST',
        dataType: 'json',
        data: {house: $hoser_id},
        success: function (response) {
            let modal = `
                             <div class="modal is-active">
                                <div class="modal-background"></div>
                                <div class="modal-content">
                                  <!-- Any other Bulma elements you want -->
                            <div class="modal-card">
                              <header class="modal-card-head">
                                <p class="modal-card-title">House Information</p>
                                <button class="delete" aria-label="close" onclick="closemodal()"></button>
                              </header>
                              <section class="modal-card-body">
                                <p>Title  : <strong>${response.title}</strong></p>
                                <hr>
                                <p>Address : <strong>${response.address}</strong></p>
                                <hr>
                                <p>Description : <strong>${response.desc}</strong></p>
                              </section>
                              <footer class="modal-card-foot">
                              </footer>
                            </div>
                                  </div>
                              </div>`;
            $('body, hmtl').append(modal);
        }
    });

});


$('.show-user-house').click(function () {
    this.disabled = true;
    let $hoser_id = this.getAttribute('data-id');
    $.ajax({
        url: '/get-user-house-data-ajax',
        type: 'POST',
        dataType: 'json',
        data: {house: $hoser_id},
        success: function (response) {
            let modal = `<div class="modal is-active">
                                <div class="modal-background"></div>
                                <div class="modal-content">
                                  <!-- Any other Bulma elements you want -->
                            <div class="modal-card">
                              <header class="modal-card-head">
                                <p class="modal-card-title">House Information</p>
                                <button class="delete" aria-label="close" onclick="closemodal()"></button>
                              </header>
                              <section class="modal-card-body">
                                <p>Title  : <strong>${response.title}</strong></p>
                                <hr>
                                <p>Address : <strong>${response.address}</strong></p>
                                <hr>
                                <p>Description : <strong>${response.desc}</strong></p>
                                <hr>
                                <p>price : <strong>${response.price}</strong></p>
                              </section>
                              <footer class="modal-card-foot">
                              </footer>
                            </div>
                                  </div>
                              </div>`;
            $('body, hmtl').append(modal);
        }
    });

})


function closemodal() {
    $(".modal").remove();
    $('.disable').attr('disabled', false);
}

let userType = document.querySelector('.User');

function appInformation() {
    if ($(userType).prop('checked') === true) {
        let modal = `<div class="modal fade show" id="exampleModalLong" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" style="display: block;">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Modal title</h5>
                <button type="button" class="close"onclick="removeModalApp()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
               please download  LiteUp App from play store 
            </div>
            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>
<div class="modal-backdrop fade show"></div>
`;
        $('body, hmtl').append(modal);
    } else {
        $('.fos_user_registration_register').submit();
    }
}

function removeModalApp() {
    var elem = document.querySelector('.modal');
    var elemBg = document.querySelector('.modal-backdrop');
    elem.parentNode.removeChild(elem);
    elemBg.parentNode.removeChild(elemBg);
}

let n = $('.agency-budget');
const numberWithCommas = (x) => {
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}
let val = numberWithCommas(n.text());
n.text(val)

let count = 0;
$(".on-disable").click(function () {

    count++;
    $('.on-disable').each(function () {
        $(this).attr('disabled', true);
    })
    if (count > 1) {
        return false;
    }
})

let notificationTotalCount = $(".notification-total-count").val();
$('.isCheck').click(function () {
    let This = $(this)
    let id = This.data('id');
    $('.isCheck').prop('disabled', true);
    let notificationCount = $('.notification-count');
    $.ajax({
            url: '/check-notification',
            type: 'POST',
            data: {id: id},
            success: function (response) {
                let parent = This.parent('.notification');
                if (response === true) {
                    parent.removeClass('is-danger');
                    parent.addClass('is-success');
                    parent.append(`<button class="checked tooltip" data-tooltip="Readen"><i class="far fa-eye"></i></button>`)
                    This.remove()
                    notificationTotalCount = notificationTotalCount - 1
                    if (notificationTotalCount == 0) {
                        notificationCount.remove()
                    } else if (notificationTotalCount <= 10) {
                        notificationCount.text(notificationTotalCount)
                    }
                    $('.isCheck').prop('disabled', false);
                }
            }
        }
    )
})

$(document).ready(function () {
    let x = $('.alert-content');
    if (x) {
        setTimeout(removeNotification, 5000)

        function removeNotification() {
            $(x).slideUp(400)
        }

        return true
    }
})

$(document).ready(function () {

    let file = document.querySelector('.verify-document-file');
    if (file != undefined) {
        file.onchange = function () {

            document.getElementById('verify-docs-file-name').innerText = this.value
        }
    }

    if ($('.short-rent-date').val() === ''){
        $('.short-rent-date').val('month');
    }

    $('.short_date').click(function () {

        let $this = $(this);
        let short_date = $('.short_date');
        let $this_data_name = $this.data('name');
        $('.short-rent-date').val('');
        if (short_date.hasClass('is-info')){
            short_date.removeClass('is-info');
            let icon = short_date.find('.icon');
            icon.remove()
        }

        $this.addClass('is-info');
        $this.prepend(`<span class="icon is-small ">
                          <i class="fas fa-check"></i>
                       </span>`);
        $('.short-rent-date').val($this_data_name);
    })
});
