# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value
#  interactive_login_listener.class: AppBundle\Listener\LoginListener


services:

#    login_listener:
#        class: %interactive_login_listener.class%
#        arguments:
#           userManager: "@fos_user.user_manager"
#        tags:
#         - { name: kernel.event_listener, event: security.interactive_login, method: onSecurityInteractiveLogin }

    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    app.form.registration:
        class: AppBundle\Form\RegistrationType
        tags:
            - { name: form.type, alias: app_user_registration }

    app.form.profile:
           class: AppBundle\Form\ProfileType
           tags:
               - { name: form.type, alias: app_user_profile }

    app.upload_listener:
            class: AppBundle\EventListener\UploadListener
            arguments: ["@doctrine.orm.entity_manager"]
            tags:
                - { name: kernel.event_listener, event: oneup_uploader.post_persist, method: onUpload }

    AppBundle\Controller\DefaultController:
            arguments: ['@fos_user.mailer.twig_swift']

    app.send_email:
         class: AppBundle\Service\SendEmail
         arguments: ['@Swift_Mailer']

    app.contact_count:
         class: AppBundle\Service\ContactCount

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'


    admin.blog_post:
        class: AppBundle\Admin\PageAdmin
        arguments: [~, AppBundle\Entity\Page, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group : Content, label: Page, icon:  "<i class='fa  fa-th-list'></i>" }
        public: true

    admin.slider:
        class: AppBundle\Admin\SliderAdmin
        arguments: [~, AppBundle\Entity\Slider, ~]
        tags:
        - { name: sonata.admin, manager_type: orm, group : Content, label: Slider, icon:  "<i class='fa fa-book'></i>" }
        public: true


    admin.custom_text_admin:
        class: AppBundle\Admin\CustomTextAdmin
        arguments: [~, AppBundle\Entity\CustomText, ~]
        tags:
        - { name: sonata.admin, manager_type: orm, group : Content, label: Custom Text, icon:  "<i class='fa fa-book'></i>" }
        public: true

    admin.user:
        class: AppBundle\Admin\AgencyAdmin
        arguments: [~, AppBundle\Entity\Agency, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group : Agencies, label: Agencies, icon: "<i class='fa  fa-users'></i>" }
        public: true

    admin.verify_request:
        class: AppBundle\Admin\VerifyRequestAdmin
        arguments: [~, AppBundle\Entity\VerifyRequest, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group :  Verification, label: Verification Request, icon:  "<i class='fa fa-first-order'></i>" }
        public: true

    admin.verification_condition:
        class: AppBundle\Admin\VerificationConditionAdmin
        arguments: [~, AppBundle\Entity\VerificationCondition, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group :  Verification, label: Verification Conditions , icon:  "<i class='fa fa-first-order'></i>" }
        public: true

    admin.verification_type:
        class: AppBundle\Admin\VerificationTypeAdmin
        arguments: [~, AppBundle\Entity\VerificationType, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group :  Verification, label: Verification Type, icon:  "<i class='fa fa-first-order'></i>" }
        public: true

    admin.payment_order:
        class: AppBundle\Admin\PaymentOrderAdmin
        arguments: [~, AppBundle\Entity\PaymentOrder, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group :  PaymentOrder, label: Payment Order , icon: "<i class='fa fa-money'></i>" }
        public: true

    admin.payment:
        class: AppBundle\Admin\PlanBuyCoinAdmin
        arguments: [~, AppBundle\Entity\PlanBuyCoin, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group :  PaymentOrder, label: Plan Buy Coin, icon: "<i class='fa fa-money'></i>" }
        public: true

    admin.plan_subscription:
        class: AppBundle\Admin\PlanSubscriptionAdmin
        arguments: [~, AppBundle\Entity\PlanSubscription, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group :  Plan Subscription, label: Plans, icon: "<i class='fa fa-globe'></i>" }
        public: true

    admin.plan_month_price:
        class: AppBundle\Admin\PlanMonthPriceAdmin
        arguments: [~, AppBundle\Entity\PlanMonthPrice, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group :  Plan Subscription, label: Plan Month Price, icon: "<i class='fa fa-globe'></i>" }
        public: true

    admin.plan_subscription_condition:
        class: AppBundle\Admin\PlanSubscriptionConditionAdmin
        arguments: [~, AppBundle\Entity\PlanSubscriptionCondition, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group :  Plan Subscription, label: Plans Conditions, icon: "<i class='fa fa-globe'></i>" }
        public: true

    admin.house:
        class: AppBundle\Admin\HouseAdmin
        arguments: [~, AppBundle\Entity\House, ~]
        tags:
        - { name: sonata.admin, manager_type: orm, group : House, label: House, icon:  "<i class='fa fa-home'></i>" }
        public: true

    admin.blog_admin:
        class: AppBundle\Admin\BlogAdmin
        arguments: [~, AppBundle\Entity\Blog, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Blog", label: Blog, icon: '<i class="fa fa-reorder" aria-hidden="true"></i>' }
        public: true

    admin.blog_category_admin:
        class: AppBundle\Admin\BlogCategoryAdmin
        arguments: [~, AppBundle\Entity\BlogCategory, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Blog", label: Blog Categoryies, icon: '<i class="fa fa-reorder" aria-hidden="true"></i>' }
        public: true

    admin.blog_comment_admin:
        class: AppBundle\Admin\BlogCommentAdmin
        arguments: [~, AppBundle\Entity\BlogComment, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Blog", label: Blog Comments, icon: '<i class="fa fa-reorder" aria-hidden="true"></i>' }
        public: true

    admin.email:
        class: AppBundle\Admin\EmailAdmin
        arguments: [~, AppBundle\Entity\Email, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Email", label: Emails, icon: '<i class="fa fa-envelope" aria-hidden="true"></i>' }
        public: true

    admin.email_reaction:
        class: AppBundle\Admin\EmailReactionAdmin
        arguments: [~, AppBundle\Entity\EmailReaction, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Email", label: Email Reaction, icon: '<i class="fa fa-envelope" aria-hidden="true"></i>' }
        public: true

    admin.contact:
        class: AppBundle\Admin\ContactAdmin
        arguments: [~, AppBundle\Entity\Contact, ~]
        tags:
        - { name: sonata.admin, manager_type: orm, group : Contact, label: Contact , icon:  "<i class='fa fa-book'></i>" }
        public: true

    admin.image_security:
        class: AppBundle\Admin\ImageSecurityAdmin
        arguments: [~, AppBundle\Entity\ImageSecurity, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group : ImageSecurity, label: Image Security, icon:  "<i class='fa fa-picture-o' aria-hidden='true'></i>" }
        public: true

    admin.follow_us:
        class: AppBundle\Admin\FollowUsAdmin
        arguments: [~, AppBundle\Entity\FollowUs, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group : FollowUs, label: Follow Us, icon:  "<i class='fa fa-share-square' aria-hidden='true'></i>" }
        public: true

    admin.help_support:
        class: AppBundle\Admin\HelpSupportAdmin
        arguments: [~, AppBundle\Entity\HelpSupport, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group : HelpSupport, label: Help Support, icon:  "<i class='fa fa-question-circle' aria-hidden='true'></i>" }
        public: true

    admin.contact_message:
        class: AppBundle\Admin\ContactMessageAdmin
        arguments: [~, AppBundle\Entity\ContactMessage, ~]
        tags:
        - { name: sonata.admin, manager_type: orm, group : Contact, label: Contacts Message, icon:  "<i class='fa fa-address-book'></i>" }
        public: true

    admin.contact_group:
        class: AppBundle\Admin\ContactGroupAdmin
        arguments: [~, AppBundle\Entity\ContactGroup, ~]
        tags:
        - { name: sonata.admin, manager_type: orm, group : Contact, label: Contact Group, icon:  "<i class='fa fa-book'></i>", show_in_dashboard: false }
        public: true

    admin.contact_count:
        class: AppBundle\Admin\ContactCountByPriceAdmin
        arguments: [~, AppBundle\Entity\ContactCountByPrice, ~]
        tags:
        - { name: sonata.admin, manager_type: orm, group : ContactCountByPrice, label: Contact Count By Price, icon:  "<i class='fa fa-book'></i>" }
        public: true

